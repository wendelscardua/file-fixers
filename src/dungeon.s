;
; File generated by cc65 v 2.19 - Git 6c90f3e2
;
	.fopt		compiler,"cc65 v 2.19 - Git 6c90f3e2"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "src/dungeon.c", 1106, 1636325986
	.dbg		file, "src/lib/nesdoug.h", 6692, 1635896270
	.dbg		file, "src/lib/neslib.h", 8949, 1635896270
	.dbg		file, "src/dungeon.h", 251, 1636322926
	.dbg		file, "src/../assets/dungeons.h", 348, 1636322925
	.dbg		sym, "rand8", "00", extern, "_rand8"
	.dbg		sym, "sector_metatiles", "00", extern, "_sector_metatiles"
	.import		_rand8
	.export		_generate_layout
	.export		_start_dungeon
	.export		_load_dungeon_sector
	.import		_sector_metatiles
	.export		_i
	.export		_j
	.export		_mt
	.export		_current_sector
	.export		_dungeon_layout
	.export		_current_dungeon_index
	.export		_current_sector_index

.segment	"RODATA"

.segment	"RODATA"

.segment	"BSS"

.segment	"ZEROPAGE"
_i:
	.res	1,$00
_j:
	.res	1,$00
_mt:
	.res	1,$00
.segment	"BSS"
_current_sector:
	.res	2,$00
_dungeon_layout:
	.res	2,$00
_current_dungeon_index:
	.res	1,$00
_current_sector_index:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ __fastcall__ generate_layout (unsigned char **dungeon_layout_buffer)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_generate_layout: near

	.dbg	func, "generate_layout", "00", extern, "_generate_layout"
	.dbg	sym, "dungeon_layout_buffer", "00", auto, 0

.segment	"CODE"

;
; void generate_layout(unsigned char ** dungeon_layout_buffer) {
;
	.dbg	line, "src/dungeon.c", 17
	jsr     pushax
;
; dungeon_layout = dungeon_layout_buffer;
;
	.dbg	line, "src/dungeon.c", 18
	ldy     #$01
	lda     (sp),y
	sta     _dungeon_layout+1
	dey
	lda     (sp),y
	sta     _dungeon_layout
;
; for(j = 0; j < NUM_DUNGEONS; j++) {
;
	.dbg	line, "src/dungeon.c", 20
	sty     _j
L000D:	lda     _j
	cmp     #$04
	bcs     L0003
;
; for(i = 0; i < NUM_DUNGEON_LEVELS; i++) {
;
	.dbg	line, "src/dungeon.c", 21
	lda     #$00
	sta     _i
L000E:	lda     _i
	cmp     #$10
	bcs     L000F
;
; dungeon_layout[j][i] = rand8() % NUM_SECTOR_TEMPLATES;
;
	.dbg	line, "src/dungeon.c", 22
	ldx     #$00
	lda     _j
	asl     a
	bcc     L000C
	inx
	clc
L000C:	adc     _dungeon_layout
	sta     ptr1
	txa
	adc     _dungeon_layout+1
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	clc
	adc     _i
	bcc     L000A
	inx
L000A:	jsr     pushax
	jsr     _rand8
	and     #$07
	ldy     #$00
	jsr     staspidx
;
; for(i = 0; i < NUM_DUNGEON_LEVELS; i++) {
;
	.dbg	line, "src/dungeon.c", 21
	inc     _i
	jmp     L000E
;
; for(j = 0; j < NUM_DUNGEONS; j++) {
;
	.dbg	line, "src/dungeon.c", 20
L000F:	inc     _j
	jmp     L000D
;
; }
;
	.dbg	line, "src/dungeon.c", 25
L0003:	jmp     incsp2

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ start_dungeon (unsigned char dungeon_index)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_start_dungeon: near

	.dbg	func, "start_dungeon", "00", extern, "_start_dungeon"
	.dbg	sym, "dungeon_index", "00", auto, 0

.segment	"CODE"

;
; void start_dungeon(unsigned char dungeon_index) {
;
	.dbg	line, "src/dungeon.c", 27
	jsr     pusha
;
; current_dungeon_index = dungeon_index;
;
	.dbg	line, "src/dungeon.c", 28
	ldy     #$00
	lda     (sp),y
	sta     _current_dungeon_index
;
; current_sector_index = 0;
;
	.dbg	line, "src/dungeon.c", 29
	sty     _current_sector_index
;
; }
;
	.dbg	line, "src/dungeon.c", 30
	jmp     incsp1

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ load_dungeon_sector (unsigned char sector_index)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_load_dungeon_sector: near

	.dbg	func, "load_dungeon_sector", "00", extern, "_load_dungeon_sector"
	.dbg	sym, "sector_index", "00", auto, 0

.segment	"CODE"

;
; void load_dungeon_sector(unsigned char sector_index) {
;
	.dbg	line, "src/dungeon.c", 32
	jsr     pusha
;
; current_sector_index = sector_index;
;
	.dbg	line, "src/dungeon.c", 33
	ldy     #$00
	lda     (sp),y
	sta     _current_sector_index
;
; current_sector = sector_metatiles[dungeon_layout[current_dungeon_index][current_sector_index]];
;
	.dbg	line, "src/dungeon.c", 34
	ldx     #$00
	lda     _current_dungeon_index
	asl     a
	bcc     L000E
	inx
	clc
L000E:	adc     _dungeon_layout
	sta     ptr1
	txa
	adc     _dungeon_layout+1
	sta     ptr1+1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     _current_sector_index
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     pusha0
	lda     #$78
	jsr     tosmula0
	clc
	adc     #<(_sector_metatiles)
	sta     _current_sector
	txa
	adc     #>(_sector_metatiles)
	sta     _current_sector+1
;
; for(i = 0; i < 10; i++) {
;
	.dbg	line, "src/dungeon.c", 36
	lda     #$00
	sta     _i
L0010:	lda     _i
	cmp     #$0A
	bcs     L0003
;
; for(j = 0; j < 12; j++) {
;
	.dbg	line, "src/dungeon.c", 37
	lda     #$00
	sta     _j
L0011:	lda     _j
	cmp     #$0C
	bcs     L0012
;
; mt = current_sector[i][j];
;
	.dbg	line, "src/dungeon.c", 38
	ldx     #$00
	lda     _i
	asl     a
	bcc     L000F
	inx
	clc
L000F:	adc     _current_sector
	sta     ptr1
	txa
	adc     _current_sector+1
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     _j
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	sta     _mt
;
; for(j = 0; j < 12; j++) {
;
	.dbg	line, "src/dungeon.c", 37
	inc     _j
	jmp     L0011
;
; for(i = 0; i < 10; i++) {
;
	.dbg	line, "src/dungeon.c", 36
L0012:	inc     _i
	jmp     L0010
;
; }
;
	.dbg	line, "src/dungeon.c", 44
L0003:	jmp     incsp1

	.dbg	line
.endproc

