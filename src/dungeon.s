;
; File generated by cc65 v 2.19 - Git 4f87c7cc6
;
	.fopt		compiler,"cc65 v 2.19 - Git 4f87c7cc6"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "src/dungeon.c", 1385, 1636338489
	.dbg		file, "src/lib/nesdoug.h", 6692, 1635896270
	.dbg		file, "src/lib/neslib.h", 8949, 1635896270
	.dbg		file, "src/dungeon.h", 250, 1636336646
	.dbg		file, "src/../assets/dungeons.h", 342, 1636336916
	.dbg		sym, "rand8", "00", extern, "_rand8"
	.dbg		sym, "sector_metatiles", "00", extern, "_sector_metatiles"
	.dbg		sym, "temp_x", "00", extern, "_temp_x"
	.dbg		sym, "temp_y", "00", extern, "_temp_y"
	.dbg		sym, "temp_int", "00", extern, "_temp_int"
	.import		_rand8
	.export		_generate_layout
	.export		_start_dungeon
	.export		_load_dungeon_sector
	.import		_sector_metatiles
	.importzp	_temp_x
	.importzp	_temp_y
	.importzp	_temp_int
	.export		_mt
	.export		_current_sector
	.export		_dungeon_layout
	.export		_current_dungeon_index
	.export		_current_sector_index

.segment	"RODATA"

.segment	"RODATA"

.segment	"BSS"

.segment	"ZEROPAGE"
_mt:
	.res	1,$00
.segment	"BSS"
_current_sector:
	.res	2,$00
_dungeon_layout:
	.res	2,$00
_current_dungeon_index:
	.res	1,$00
_current_sector_index:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ __fastcall__ generate_layout (unsigned char *dungeon_layout_buffer)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_generate_layout: near

	.dbg	func, "generate_layout", "00", extern, "_generate_layout"
	.dbg	sym, "dungeon_layout_buffer", "00", auto, 0

.segment	"CODE"

;
; void generate_layout(unsigned char * dungeon_layout_buffer) {
;
	.dbg	line, "src/dungeon.c", 23
	jsr     pushax
;
; dungeon_layout = dungeon_layout_buffer;
;
	.dbg	line, "src/dungeon.c", 24
	ldy     #$01
	lda     (sp),y
	sta     _dungeon_layout+1
	dey
	lda     (sp),y
	sta     _dungeon_layout
;
; temp_int = 0;
;
	.dbg	line, "src/dungeon.c", 25
	tya
	sta     _temp_int
	sta     _temp_int+1
;
; for(temp_y = 0; temp_y < NUM_DUNGEONS; temp_y++) {
;
	.dbg	line, "src/dungeon.c", 26
	sta     _temp_y
L000B:	lda     _temp_y
	cmp     #$04
	bcs     L0003
;
; for(temp_x = 0; temp_x < NUM_DUNGEON_LEVELS; temp_x++) {
;
	.dbg	line, "src/dungeon.c", 27
	lda     #$00
	sta     _temp_x
L000C:	lda     _temp_x
	cmp     #$10
	bcs     L000D
;
; dungeon_layout[temp_int++] = rand8() % NUM_SECTOR_TEMPLATES;
;
	.dbg	line, "src/dungeon.c", 28
	lda     _dungeon_layout
	clc
	adc     _temp_int
	pha
	lda     _dungeon_layout+1
	adc     _temp_int+1
	tax
	pla
	jsr     pushax
	inc     _temp_int
	bne     L000A
	inc     _temp_int+1
L000A:	jsr     _rand8
	and     #$07
	ldy     #$00
	jsr     staspidx
;
; for(temp_x = 0; temp_x < NUM_DUNGEON_LEVELS; temp_x++) {
;
	.dbg	line, "src/dungeon.c", 27
	inc     _temp_x
	jmp     L000C
;
; for(temp_y = 0; temp_y < NUM_DUNGEONS; temp_y++) {
;
	.dbg	line, "src/dungeon.c", 26
L000D:	inc     _temp_y
	jmp     L000B
;
; }
;
	.dbg	line, "src/dungeon.c", 31
L0003:	jmp     incsp2

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ start_dungeon (unsigned char dungeon_index)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_start_dungeon: near

	.dbg	func, "start_dungeon", "00", extern, "_start_dungeon"
	.dbg	sym, "dungeon_index", "00", auto, 0

.segment	"CODE"

;
; void start_dungeon(unsigned char dungeon_index) {
;
	.dbg	line, "src/dungeon.c", 33
	jsr     pusha
;
; current_dungeon_index = dungeon_index;
;
	.dbg	line, "src/dungeon.c", 34
	ldy     #$00
	lda     (sp),y
	sta     _current_dungeon_index
;
; current_sector_index = 0;
;
	.dbg	line, "src/dungeon.c", 35
	sty     _current_sector_index
;
; }
;
	.dbg	line, "src/dungeon.c", 36
	jmp     incsp1

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ load_dungeon_sector (unsigned char sector_index)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_load_dungeon_sector: near

	.dbg	func, "load_dungeon_sector", "00", extern, "_load_dungeon_sector"
	.dbg	sym, "sector_index", "00", auto, 0

.segment	"CODE"

;
; void load_dungeon_sector(unsigned char sector_index) {
;
	.dbg	line, "src/dungeon.c", 38
	jsr     pusha
;
; current_sector_index = sector_index;
;
	.dbg	line, "src/dungeon.c", 39
	ldy     #$00
	lda     (sp),y
	sta     _current_sector_index
;
; current_sector = (unsigned char *) sector_metatiles[dungeon_layout[current_dungeon_index * NUM_DUNGEON_LEVELS + current_sector_index]];
;
	.dbg	line, "src/dungeon.c", 40
	ldx     #$00
	lda     _current_dungeon_index
	jsr     shlax4
	clc
	adc     _current_sector_index
	bcc     L000C
	inx
	clc
L000C:	adc     _dungeon_layout
	sta     ptr1
	txa
	adc     _dungeon_layout+1
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	stx     tmp1
	asl     a
	rol     tmp1
	clc
	adc     #<(_sector_metatiles)
	sta     ptr1
	lda     tmp1
	adc     #>(_sector_metatiles)
	sta     ptr1+1
	iny
	lda     (ptr1),y
	sta     _current_sector+1
	lda     (ptr1,x)
	sta     _current_sector
;
; temp_int = 0;
;
	.dbg	line, "src/dungeon.c", 42
	txa
	sta     _temp_int
	sta     _temp_int+1
;
; for(temp_y = 0; temp_y < 10; temp_y++) {
;
	.dbg	line, "src/dungeon.c", 43
	sta     _temp_y
L000D:	lda     _temp_y
	cmp     #$0A
	bcs     L0003
;
; for(temp_x = 0; temp_x < 12; temp_x++) {
;
	.dbg	line, "src/dungeon.c", 44
	lda     #$00
	sta     _temp_x
L000E:	lda     _temp_x
	cmp     #$0C
	bcs     L0010
;
; mt = current_sector[temp_int++];
;
	.dbg	line, "src/dungeon.c", 45
	lda     _current_sector
	clc
	adc     _temp_int
	sta     ptr1
	lda     _current_sector+1
	adc     _temp_int+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     _mt
	inc     _temp_int
	bne     L000F
	inc     _temp_int+1
;
; for(temp_x = 0; temp_x < 12; temp_x++) {
;
	.dbg	line, "src/dungeon.c", 44
L000F:	inc     _temp_x
	jmp     L000E
;
; for(temp_y = 0; temp_y < 10; temp_y++) {
;
	.dbg	line, "src/dungeon.c", 43
L0010:	inc     _temp_y
	jmp     L000D
;
; }
;
	.dbg	line, "src/dungeon.c", 51
L0003:	jmp     incsp1

	.dbg	line
.endproc

